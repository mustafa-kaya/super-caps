---
title: SuperCaps

rules: 

  ################################################################
  # Capslock to Super ( ⌘⌥⇧⌃ )
  ################################################################
  - description: CapsLock to Super
    manipulators: 

      - description: 'capslock = esc(click) | super(hold)'
        type: basic
        from: { key_code: caps_lock, modifiers: { optional: [ any ] } }
        to: [ { key_code: right_shift, modifiers: [ right_command, right_control, right_option ] } ]

      - description: 'super + escape = caps_lock switch'
        type: basic
        from: { key_code: escape, modifiers: { optional: [ caps_lock ], mandatory: [ right_shift, right_command, right_control, right_option ] } }
        to: [ { key_code: caps_lock } ]

  ################################################################
  # Caret Move --> super + { hjkl }
  ################################################################
  - description: Caret Move
    manipulators: 

    - description: 'super + h = left_arrow'
      type: basic
      from: { key_code: h, modifiers: { mandatory: [ right_shift, right_command, right_control, right_option ] } }
      to: [ { key_code: left_arrow } ]

    - description: 'super + j = down_arrow'
      type: basic
      from: { key_code: j, modifiers: { mandatory: [ right_shift, right_command, right_control, right_option ] } }
      to: [ { key_code: down_arrow } ]

    - description: 'super + k = up_arrow'
      type: basic
      from: { key_code: k, modifiers: { mandatory: [ right_shift, right_command, right_control, right_option ] } }
      to: [ { key_code: up_arrow } ]

    - description: 'super + l = right_arrow'
      type: basic
      from: { key_code: l, modifiers: { mandatory: [ right_shift, right_command, right_control, right_option ] } }
      to: [ { key_code: right_arrow } ]
...